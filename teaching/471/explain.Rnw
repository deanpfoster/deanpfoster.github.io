% everything after a % is a comment
%
% each latex document starts with the declaration of the 
% documentclass. There are different standard classes and 
% others can be found on the web or created 
% The main standard ones are
% book, article, report, letter
% the stuff in [] are options for the class, here
% 10pt means we want the standard fontsize to be 10 (other sizes allowed: 11pt, 12pt)
\documentclass[10pt]{article}

% \usepacke includes a package
\usepackage{a4wide}   % sets a4 format and uses more space of it than standard
\usepackage{psfig}    % for ps-figures
\usepackage{epsfig}   % for eps-figures
\usepackage{graphics} % for includegraphics
\usepackage{graphicx} % for includegraphics
\usepackage{color}    % enables to use colored text
%\usepackage{pslatex}  % changes from normal latex fonts to postscript
                       % fonts, which you prefer is taste / depends on what
		       % you want to do with it later

% title of document, together with author used to create titlepage/titlehead
\title{Short example/introduction to \LaTeX}
% setting author of document
\author{Christian Schulz (and then modified by Dean Foster}


% begin{document} starts your document, meaning what you see
\begin{document}

% creating tilehead/titlepage (depending on documentclass)
\maketitle

\section{General}
In \LaTeX\ you do not say ``I want this to be bold because its a headline'', you say 
instead ``This is a headline'' and \LaTeX\ than displays this headline correspondingly to 
its parameters. You can change the way how \LaTeX\  handles nearly everything, but I would strongly 
advice that you do not do this (at least not in your beginning phase, how to customize \LaTeX\  is 
a more advanced topic).

As well as this a newline in the document is not created when you type a newline in your tex-file.
\LaTeX\  does that on its own, it just interprets the text as a stream of words. 
Paragraphs are separated by empty lines in your tex-file. If you want to enforce a newline without
starting a new paragraph you can use the command {\tt \symbol{92}\symbol{92}} or {\tt \symbol{92}newline}.
% in tex it is impossible to get a \ in your document by typing it as it is used for starting commands
% to create a \ in your document use \symbol{92} instead, this creates the symbol for the ascii code 92
% in this way you can also create other symbols that can not be displayed in an other way


\section{Document Structure}
In tex a document is separated into chapters, sections, subsections, subsubsections,
paragraphs and subparagraphs. Of course you do not need to use all of them. 
Chapters are only available if you choose the documentclass book or report.
\LaTeX\  numbers the different structures automatically, but remember that if you create a
subsection without having created a section before you will get something like 0.1 as you are
currently in section 0.

\section{Lists}
There are three general different ways to create lists.
\begin{enumerate}
\item An itemize-environment is unnumbered and has symbols in front of it.
	Of course you can put lists into lists again. Like
	\begin{itemize}
	\item First subpoint
	\item Second subpoint
	\item Third subpoint
		\begin{itemize}
			\item with first subsubpoints
			\item and second
		\end{itemize}
	\end{itemize}
\item An enumerate-environment is a numbered list. If several lists of the same type are
	put into each other, the symbol in front changes.
	\begin{enumerate}
		\item this subpoints have a different style of counting
		\item second subpoint
	\end{enumerate}
\item A special list is the description-environment, where you can specify a different text in front of each points.
\end{enumerate}

All lists have the same structure:
\begin{description}
	\item[start] each list-environment starts with the command {\tt \symbol{92}begin\{\_listtype\_\}}
	\item[items] to add a item just type in {\tt \symbol{92}item} and all after that will be at the next point
	\item[end] each list-environment ends with the command {\tt \symbol{92}end\{\_listtype\_\}}
\end{description}


\section{Mathematics}
One of the big advantages of \LaTeX\  is its capability to display complex mathematical expressions and at the same time they
are relatively easy to type in. First you have to start a mathematics environment, then type in your formulas or equations and
then close the environment.

We have mainly two different environments. The first is used inline, which means the math is displayed in the same line as the
rest of the text. The other uses extra space, see the examples.

\subsection{Inline}
The following formula $a^2 + b^2 = c^2$ is inline, it stays within the text.

\subsection{Extra Line}
Here the formula 
\begin{equation}
a^2 + b^2 = c^2 \label{equation_1}
\end{equation}
uses extra space.

If you want to write several lines of math with some symbol always at the same position (normally the $=$) use 
the {\tt eqnarray} environment. 

We strongly advice you to mark vectors somehow in your document in order to make it easy for the user to distinguish between
scalars and vectors. In \LaTeX\  you can use the {\tt \symbol{92}vec\{a\}} command which gives you $\vec{a}$. Often the additional
arrow above is not wanted as it can get confusing in combination with indices and other markings, one often and well known
way to represent vectors is making them boldface. This is also our recommended way. 
Making a vector boldface in the easiest way is a small exception from the general idea of not saying boldface but vector.
Use bf to do it. Example: $\alpha {\bf a} = {\bf b}$. You have to put the bf in brackets, otherwise everything after the bf 
would be boldface.

If you labeled the equation you can refer to it before or after it using the ref command. In (\ref{equation_1}) we have
Pythagoras law.

There is a lot to know about mathematics in \LaTeX. For example how to display fractions, avoid the numbering
of equations and so on. You can also define your
own commands to make your life with boldface vectors easier. Have a look at books or online resources as explaining all this 
would be way to much here.

\section{R}
To type R commands start with $< <BlockName> > =$ and then start
typing R commands (end it with @ to get back to latex:
<<>>=
x <- rnorm(100)
y <- x + rnorm(100)
@ 

\section{Images}

Images can be included in a floating area. Floating area means that tex moves the area so that it looks nice.
\begin{figure}% you can add [_options_] behind it, where the option h means put the figure here, t - top
		% b - bottom, p - extra page. The order means what is prefered. So
		% [htb] means try first to put it here, than try top, than bottom. The standard (used if you don't specify [])
		% is [tbp]
 \begin{center} % centers everything with in it

                % generate your R figure inside a block which has the special title of fig=TRUE
                % THis will make output that is then included in the file.
<<fig=TRUE,echo=FALSE>>=
plot(x,y)
@ 
   \caption{With caption we can create some description for the image}
   \label{image_1} % creates a label, so that we can later refer to the image
 \end{center}
\end{figure}

If you label a image you can later or even before the image refer to it by using the ref command, just
as we refer here to figure \ref{image_1}. This has the advantage that the number is automatically generated and therefore
changed if you add or delete other images.

\section{Compiling}

To make your output you first have to generate a ``latex'' file from
the .Rnw file.  This will look something like: {\tt R CMD Sweave
document.Rnw}.  Now you should have a file called {\tt document.tex}.

Now use {\tt pdflatex document.tex} to generate a pdf file. 

If you are using labels and references we recommend running  {\tt pdflatex} twice or three times,
as \LaTeX\  creates first a file with all the references stored and in the next run uses this references. Have a look at what 
\LaTeX\  tells you (it will tell you if the references may be incorrect, if so, run it again).

By the way, you can also label sections, chapter, subsections, etc. Refering to them is than again done via {\tt \symbol{92}ref}.

\section{Have a Look at a Book}

This is a very short introduction, a lot of things are not covered or just mentioned or not explained in detail.
Have a look at a book for \LaTeX\  to get more understanding, there are a lot of them out there.

\section{Future things to look at}

When you are confortable with all of this, you might start looking at:
\begin{itemize}
\item {\tt R CMD Stangle document.Rnw} to generate a document.R file
which you can then run all at once.  This helps for making things interactive.
\item Bibtex (Keeps track of references)
\item Make (builds files faster)
\item git (keep track of changes to files--a timemachine for several
laptops at once)
\end{itemize}

\end{document}
