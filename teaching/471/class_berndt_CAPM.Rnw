\documentclass{article}


% Deans New Commands
\usepackage[usenames]{color}
\definecolor{mypurple}{rgb}{.3,0,.5}
\newcommand{\dpf}[1]{\noindent{\textcolor{mypurple}{\{{\bf dpf:} \em #1\}}}}
\newcommand{\note}[1]{\noindent{\textcolor{red}{\{{\bf NOTE:} \em #1\}}}}
%\newcommand{\dpf}[1]{}
%\newcommand{\note}[1]{}




%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% %                                                                          %
% %                                                                          %
% %                  B E G I N     D O C U M E N T                           %
% %                                                                          %
% %                                                                          %
% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\begin{document}
\SweaveOpts{prefix.string=.figures/capm}
\title{CAPM: Berndt CAPM}
\author{Dean Foster}
\maketitle


\section{Admistrivia}

\begin{itemize}
\item Dice: who have done dice already?
\item It will take you about one hour (including a less than one page write up). 
\end{itemize}

\section{Story: Pair programming}
\begin{itemize}
\item Mythical man month
\item ``If you double the number of programmers the amount of time it
takes doubles.'' Huh?
\item Invention of {\em Extreme Programming.}  
\begin{itemize}
\item Always have working code
\item Always modify working code to make it simplier
\item Small changes and lots of testing
\end{itemize}
\item One Version is called {\em pair programming}
\begin{itemize}
\item Person who ``knows'' the code doesn't have the typewriter
\item Person who ``knows'' the code can only make suggestions
\item By the end of a day working together--the other person knows the code
\end{itemize}
\item Lots of experimental data on how effective pair programming is.
Not as many controlled experiments as there should be.  Oh well.
\end{itemize}

\section{Class notes}

\begin{itemize}
\item  variance / sd
\item variance vs covariance
\item Pictures
\item  variance formula for sums
\item covariance of x with x is variance of x
\end{itemize}

\section{CAPM without risk free}
\begin{itemize}
\item  eq (2.5) $r_p = \sum w_j r_j$
\item eq (2.6) variance formula
\item suppose $w_j$ is small.  In other words, consider adding a small amount to an existing portfolio
\item  how does r change
\item how does variance change
\item  if variances of two investments agree then r's must agree
\item  Better: if variance of a $\le$ variance of b, then return of a $\le$ return b
\item  But what if variances aren't equal?
\end{itemize}
\section{CAPM with risk free (scaling variances)}

\begin{itemize}
\item need to scale investments
\item need to sell (borrow) something to finance new investment
\item actual return is: $r_k -r_f$
\item Now we can scale to get marginal variances to match
\item  bingo: we have an equation describing returns vs marginal variance
\item $(r_k -r_f)/s_{kp}$ is constant for all possible investments
\item  a bounce per buck argument
\end{itemize}
\section{Using the market to set the constant}
\begin{itemize}
\item  equation holds if market
\item  generates CAPM equation (2.16)
\end{itemize}
\section{Doing statistics}
\begin{itemize}
\item  regression view of equation
\end{itemize}


<<readdata, eval=TRUE, echo=FALSE>>=

Data <- read.csv("http://gosset.wharton.upenn.edu/~foster/teaching/471/monthly_finance.csv");  
# the following will list names.  It is useful for debugging
# names(Data)

time       <- Data[-1,"Year"]
market.ex  <- Data[-1,"Excess.Return..S.P.500"]       # dump leading missing value
riskfree <-  Data$t30ret
riskfree.cum <- cumprod(1 + riskfree[-1])
market.raw <- market.ex + riskfree[-1]       # dump leading missing value

@ 

The market over time:
<<fig=TRUE>>=
  plot(market.ex ~ time)
@ 

Apple over time:
<<>>=
apple.ex   <- Data[-1,"apple.excess"];                # fix time scale, since 1981
apple.miss <- is.na(apple.ex)
apple.ex   <- apple.ex[(!apple.miss)]
market.ex <- market.ex[(!apple.miss)]
time <- time[(!apple.miss)]
@ 

<<fig=TRUE>>=

plot(apple.ex ~ time)

@ 

Apple vs Market:
<<fig=TRUE>>=

 plot(apple.ex ~ market.ex)

@ 

Summary statistics:
<<>>=
summary(apple.ex)
summary(market.ex)
mean.apple <- mean(apple.ex)
mean.market <- mean(market.ex)
mean.apple
mean.market
@ 
Portfolios:
<<>>=
fraction <- .3
port = fraction * apple.ex / mean.apple + (1 - fraction) * market.ex / mean.market
summary(port)

@ 

Variance plot:
<<>>=

fractions <- seq(-1 , 2 , .01);
mean.port <- 0 * fractions
var.port <- 0 * fractions                                                
for(i in 1:(length(fractions)))
  {
    portfolio <- fractions[i] * apple.ex / mean.apple + (1 - fractions[i]) * market.ex / mean.market
    mean.port[i] <- mean(portfolio)
    var.port[i] <- var(portfolio)
  }
mean.port

@ 

\section{White space rule example! (mention feedback forms}

THe mean should be constant:
<<fig=TRUE>>=
  plot(fractions, mean.port)
@ 
But not the variance:
<<fig=TRUE>>=
  plot(fractions, var.port)
@ 
Blowup:
<<fig=TRUE>>=
  plot(fractions[(fractions < 1.1) & (fractions > .8)], var.port[(fractions < 1.1) & (fractions > .8)])
@ 

Dean's version of the final code:

<<eval=FALSE>>=

fractions <- seq(-1 , 2 , .01);


best <- rep(0,100)
for(j in 1:100)
  {
    samples <- sample(1:length(apple.ex),replace=TRUE)
    var.port <- 0 * fractions
    apple.resample <- apple.ex[samples]
    market.resample <- market.ex[samples]
    for(i in 1:(length(fractions)))
      {
        portfolio <- fractions[i] * apple.resample / mean.apple + (1 - fractions[i]) * market.resample / mean.market
        var.port[i] <- var(portfolio)
      }
    best[j] <- fractions[var.port == min(var.port)]
  }
hist(best)
@ 



\section*{Domino Sugar: a bootstrapping example}

Domino Sugar was one of the original 12 companies in the DOW.  So
let's track it over time to get a feel for what a long series looks
like.  This also removes most issues of selection bias since we could
only pick one company out of 12 total instead of 1 out of 5000 current
companies and then working backwards.

<<readdata, eval=TRUE, echo=FALSE>>=

sugar <- read.csv("domino_sugar.csv");  
tbills <- read.csv("tbills-inflation.csv");  
both <- merge(sugar,tbills,by.x="DATE",by.y="caldt")

# the following will list names.  It is useful for debugging
# names(Data)

time       <- both$DATE
market     <- both$vwretd       # dump leading missing value
riskfree   <- both$t30ret
domino     <- both$RET                # fix time scale, since 1981
market.ex  <- market - riskfree
domino.ex  <- domino - riskfree

@ 

\noindent
\hspace{-1.5in}
<<fig=TRUE,width=4, height=4>>=

  plot(market.ex ~ time)

@ 
<<fig=TRUE,echo=FALSE,width=4, height=4>>=

plot(domino.ex ~ time)

@ 

Apple vs Market:
<<echo=FALSE,fig=TRUE,width=4, height=4 >>=

 plot(domino.ex ~ market.ex)

@ 

Summary statistics:
<<echo=FALSE>>=

summary(domino.ex)
summary(market.ex)
mean.domino <- mean(domino.ex,na.rm=TRUE)
mean.market <- mean(market.ex,na.rm=TRUE)
mean.domino
mean.market

@ 
Portfolios:
<<echo=FALSE>>=

fraction <- .3
port = fraction * domino.ex / mean.domino + (1 - fraction) * market.ex / mean.market
summary(port)

@ 

Variance plot:
<<echo=FALSE>>=

fractions <- seq(-1 , 2 , .01);
mean.port <- 0 * fractions
var.port <- 0 * fractions                                                
for(i in 1:(length(fractions)))
  {
    portfolio <- fractions[i] * domino.ex / mean.domino + (1 - fractions[i]) * market.ex / mean.market
    mean.port[i] <- mean(portfolio,na.rm=TRUE)
    var.port[i] <- var(portfolio,na.rm=TRUE)
  }

# samples <- sample(1:length(domino.ex)
#    portfolio <- fractions[i] * domino.ex[samples] / mean.domino + (1 - fractions[i]) * market.ex[samples] / mean.market


@ 


THe mean should be constant:
\centerline{%
<<fig=TRUE,echo=FALSE,height=3, width=3>>=

  plot(fractions, mean.port,type="l")

@ 
}
Example of white space rule!  THis is a useless graph!

But not the variance: (with blowup):

\noindent
\hspace{-1.5in}
<<fig=TRUE,echo=FALSE,width=3,height=3>>=

  plot(fractions, var.port,type="l")

@ 
<<fig=TRUE,echo=FALSE,width=3,height=3>>=

  plot(fractions[(fractions < 1.1) & (fractions > .8)],
       var.port[(fractions < 1.1) & (fractions > .8)],
       xlab = "fraction",
       ylab = "var",
       type="l")

@ 



Bootstrap:
<<echo=FALSE>>=

fractions <- seq(.3 , 6 , .001);
opt <- rep(0,1)
for(boot in 1:1)
{
    samples <- sample(1:length(domino.ex))
    mean.port <- 0 * fractions
    var.port <- 0 * fractions                                                
    for(i in 1:(length(fractions)))
     {
       portfolio <- fractions[i] * domino.ex[samples] / mean.domino + (1 - fractions[i]) * market.ex[samples] / mean.market
       mean.port[i] <- mean(portfolio,na.rm=TRUE)
       var.port[i] <- var(portfolio,na.rm=TRUE)
     }
    print((1:length(fractions))[var.port == min(var.port)])
  opt[boot] = fractions[var.port == min(var.port)]
 }














@ 


\end{document}
