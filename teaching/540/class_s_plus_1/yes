[1;24r[24;1H
Erase set to Delete
Kill set to Ctrl-U
Sun Microsystems Inc.	SunOS 5.5.1	Generic	May 1996


NOTE BENE:  The HP 4si printer in 3005 is now accessible as
	    ENKIDU's default printer.


*************************************************************************

		This system is the property of 
		the University of Pennsylvania
	   and is for use by authorized persons only.

*************************************************************************

You have mail.
enkidu:/home/waterman/public_html/Teaching/540s99/class05 % 


enkidu:/home/waterman/public_html/Teaching/540s99/class05 % R
R


R : Copyright 1999, The R Development Core Team
Version 0.63.2  (January 12, 1999)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type	"?license" or "?licence" for distribution details.

R is a collaborative project with many contributors.
Type	"?contributors" for a list.

Type	"demo()" for some demos, "help()" for on-line help, or
    	"help.start()" for a HTML browser interface to help.
Type	"q()" to quit R.

> source("class05_02.q")
source("class05_02.q")
> beta <- c(0,0) # initial guess.
beta <- c(0,0) # initial guess.
> x
x
     [,1] [,2]
[1,]    1    1
[2,]    1    1
[3,]    1    1
[4,]    1    1
[5,]    1   -1
[6,]    1   -1
[7,]    1   -1
> y
y
[1] 1 0 0 0 1 1 0
> beta
beta
[1] 0 0
> t(x) %*% (y - exp(x %*% beta)/(1 + exp(x %*% beta))) 
t(x) %*% (y - exp(x %*% beta)/(1 + exp(x %*% beta))) 
     [,1]
[1,] -0.5
[2,] -1.5
> t(x) %*% diag( c(exp(x %*% beta)/(1 + exp(x %*% beta))^2)) %*% x
t(x) %*% diag( c(exp(x %*% beta)/(1 + exp(x %*% beta))^2)) %*% x
     [,1] [,2]
[1,] 1.75 0.25
[2,] 0.25 1.75
> beta <- solve(t(x) %*% diag( c(exp(x %*% beta)/(1 + exp(x %*% beta))^2)) %*% x,      t(x) %*% (y - exp(x %*% beta)/(1 + exp(x %*% beta))) ) + beta
beta <- solve(t(x) %*% diag( c(exp(x %*% beta)/(1 + exp(x %*% beta))^2)) %*% x,      t(x) %*% (y - exp(x %*% beta)/(1 + exp(x %*% beta))) ) + beta
> beta
beta
[1] -0.1666667 -0.8333333
> beta <- solve(t(x) %*% diag( c(exp(x %*% beta)/(1 + exp(x %*% beta))^2)) %*% x,      t(x) %*% (y - exp(x %*% beta)/(1 + exp(x %*% beta))) ) + beta
beta <- solve(t(x) %*% diag( c(exp(x %*% beta)/(1 + exp(x %*% beta))^2)) %*% x,      t(x) %*% (y - exp(x %*% beta)/(1 + exp(x %*% beta))) ) + beta
> beta
beta
[1] -0.2016529 -0.8946863
> beta <- solve(t(x) %*% diag( c(exp(x %*% beta)/(1 + exp(x %*% beta))^2)) %*% x,      t(x) %*% (y - exp(x %*% beta)/(1 + exp(x %*% beta))) ) + beta
beta <- solve(t(x) %*% diag( c(exp(x %*% beta)/(1 + exp(x %*% beta))^2)) %*% x,      t(x) %*% (y - exp(x %*% beta)/(1 + exp(x %*% beta))) ) + beta
> beta
beta
[1] -0.2027319 -0.8958791
> beta <- solve(t(x) %*% diag( c(exp(x %*% beta)/(1 + exp(x %*% beta))^2)) %*% x,      t(x) %*% (y - exp(x %*% beta)/(1 + exp(x %*% beta))) ) + beta
beta <- solve(t(x) %*% diag( c(exp(x %*% beta)/(1 + exp(x %*% beta))^2)) %*% x,      t(x) %*% (y - exp(x %*% beta)/(1 + exp(x %*% beta))) ) + beta
> beta
beta
[1] -0.2027326 -0.8958797
> beta <- solve(t(x) %*% diag( c(exp(x %*% beta)/(1 + exp(x %*% beta))^2)) %*% x,      t(x) %*% (y - exp(x %*% beta)/(1 + exp(x %*% beta))) ) + beta
beta <- solve(t(x) %*% diag( c(exp(x %*% beta)/(1 + exp(x %*% beta))^2)) %*% x,      t(x) %*% (y - exp(x %*% beta)/(1 + exp(x %*% beta))) ) + beta
> beta
beta
[1] -0.2027326 -0.8958797
> solve(t(x) %*% diag( c(exp(x %*% beta)/(1 + exp(x %*% beta))^2)) %*% x)
solve(t(x) %*% diag( c(exp(x %*% beta)/(1 + exp(x %*% beta))^2)) %*% x)
            [,1]        [,2]
[1,]  0.70833333 -0.04166667
[2,] -0.04166667  0.70833333
> beta
beta
[1] -0.2027326 -0.8958797
> sqrt(.708)
sqrt(.708)
[1] 0.8414274
> summary(glm(y ~ -1 + x, family = "binomial"))
summary(glm(y ~ -1 + x, family = "binomial"))

Call:
glm(formula = y ~ -1 + x, family = "binomial")

Deviance Residuals: 
      1        2        3        4        5        6        7  
 1.6651  -0.7585  -0.7585  -0.7585   0.9005   0.9005  -1.4823  

Coefficients:
   Estimate Std. Error z value Pr(>|z|)
x1  -0.2027     0.8411  -0.241    0.810
x2  -0.8959     0.8411  -1.065    0.287

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 9.7041  on 7  degrees of freedom
Residual deviance: 8.3178  on 5  degrees of freedom
AIC: 12.318

Number of Fisher Scoring iterations: 3

> args(glm)
args(glm)
function (formula, family = gaussian, data = list(), weights = NULL, 
    subset = NULL, na.action = na.fail, start = NULL, offset = NULL, 
    control = glm.control(...), model = TRUE, method = "glm.fit", 
    x = FALSE, y = TRUE, contrasts = NULL, ...) 
NULL
> q()
q()
Save workspace image? [y/n/c]: y
y
enkidu:/home/waterman/public_html/Teaching/540s99/class05 % exit
exit

exit

Process shell finished
